name: Backend / Frontend CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  backend-tests:
    name: Build / Run / Test Backend
    runs-on: ubuntu-latest
    env:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      ML_SERVICE_HOST: ml_service
      ML_SERVICE_PORT: 8080
      APP_PORT: 8000

    steps:
      - uses: actions/checkout@v4
      
      # Set up Docker and Docker Compose
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version
      
      - name: Start test environment
        run: docker-compose -f docker-compose.yml up -d postgres
      
      - name: Wait for PostgreSQL
        run: |
          timeout 30s bash -c 'until docker-compose exec -T postgres pg_isready; do sleep 2; done'
      
      - name: Run backend tests
        run: docker-compose --profile tests run backend_tests

      - name: Ping backend
        run: curl http://localhost:8000/ping
      
      - name: Stop containers
        if: always()
        run: docker-compose down
  
  frontend-test:
    name: Run Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'frontend/interview-app/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
        working-directory: frontend/interview-app
      
      - name: Run tests
        run: npm test -- --watchAll=false --coverage
        working-directory: frontend/interview-app

  frontend-build-and-deploy:
    name: Build / Deploy Frontend
    needs: frontend-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'frontend/interview-app/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
        working-directory: frontend/interview-app
      
      - name: Build project
        run: npm run build
        working-directory: frontend/interview-app
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./frontend/interview-app/build